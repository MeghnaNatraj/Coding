
1. No neat indentation, making it harder to read the code. (This may be trivial, but code must be indented when not minified.)
2. No consistancy is using GET variables. In line 2 and 3 we store the description and product name in 2 variables, wheras in line 8 we used the get variable directly.
3. Use of double quotes or single quotes in GET leading to more inconsistancy in the code.
4. The names in the GET request are not the same as the values in the DB. product_name is GET corresponds to name in DB whereas id in GET corresponds to product_id in DB. The request must be made correctly. (not a PHP error)
5. Line 5: After this request is made we must check if the connection was successful. This check is not made and in line 10 we continue to make a request which can be unsuccessful as well. 
6. Line 7 : We must never update the database from a GET request as the code is now susceptible to various web spidering software, web accelerators, anti-virus programs and also cross-site request forgery. It can lead to an unwarrented modification of the system. POST must be used for anything that modifies persistent state in the database.
7. Line 7 : Use prepare to prevent SQL Injection.
8. Line 10 : Incorrect variable name used. Must use $db and not $mysqli
9. No check is made for a valid db connection, successful definition and execution of prepare statement.
10. The database connection is not closed in the end.


